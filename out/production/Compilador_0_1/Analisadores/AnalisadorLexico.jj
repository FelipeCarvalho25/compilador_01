PARSER_BEGIN(AnalisadorLexico)
package Analisadores;
public class AnalisadorLexico {
    static int nCountSintaticError = 0;
    private static StringBuffer mensagens_erros_sintatic = new StringBuffer();
    public String getMessages() {
        return this.token_source.getMensagesManhosas();
     }

    public int getLexError() {
       return this.token_source.foundLexError();
    }
    public int getSintaticError() {
           return this.nCountSintaticError;
    }
    public void acaoSemantica(String codigo){

    }
    public String getMensagensErros() {
       return this.token_source.getMensagensErros();
    }
   public String getMsgSintaticError() {
          return this.mensagens_erros_sintatic.toString();
       }
}
PARSER_END(AnalisadorLexico)

TOKEN_MGR_DECLS:
{
    private static int countLexError =0;
    private static StringBuffer mensages_manhosas = new StringBuffer();
    private static StringBuffer mensagens_erros = new StringBuffer();

    public int foundLexError()
    {
        return countLexError;
    }
    public String getMensagesManhosas(){
          return mensages_manhosas.toString();
     }
     public String getMensagensErros(){
               return mensagens_erros.toString();
          }
}


SPECIAL_TOKEN : {
    <INVALID_LEXICAL:(~["'"," ","\\","\n","\r", "a"-"z", "A"-"Z", "0"-"9", "\"","(",")","[","]","{","}",":", ";", ",",".", "=",">","<","!","+","-","*","/","%","\t"
    ,"\f", "&", "|"])+ > {mensagens_erros.append("ERRO(01): ENCONTRADO SIMBOLO INVALIDO -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); countLexError++; }
    | <INVALID_STRG1: "\"" (~["\n","\r", "\"" ])* ["\n","\r"] > {mensagens_erros.append("ERRO(02): STRING NAO FINALIZADA -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); countLexError++; }
    | <INVALID_STRG2: "'" (~["\n","\r", "'" ])* ["\n","\r"] > {mensagens_erros.append("ERRO(02): STRING NAO FINALIZADA -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); countLexError++; }
    | <INVALID_IDENT: "_""_"(["a"-"z","A"-"Z"] | ["0" - "9"])* | (["a"-"z","A"-"Z"] | ["0" - "9"])* "_""_" | (["a"-"z","A"-"Z"] | ["0" - "9"])*"_""_"(["a"-"z","A"-"Z"] | ["0" - "9"])*   > {mensagens_erros.append("ERRO(03): IDENTIFICADOR INVÁLIDO -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); countLexError++; }



} //TIPOS
TOKEN: // PALAVRAS RESERVADAS
{
	<PROGRAM: ("p" | "P")  ("r" | "R") ("o" | "O") ("g" | "G") ("r" | "R") ("a" | "A") ("m" | "M") > { mensages_manhosas.append("PALAVRAS RESERVADAS ->" +   image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
 | <DEFINE: ("d" | "D") ("e" | "E") ("f" | "F") ("i" | "I") ("n" | "N") ("e" | "E")>{ mensages_manhosas.append("PALAVRAS RESERVADAS ->" + image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n");}
 | <NOT: ("n" | "N")("o" | "O")("t" | "T")>{ mensages_manhosas.append("PALAVRAS RESERVADAS ->" + image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
 | <VARIABLE: ("v"|"V")("a"|"A")("r"|"R")("i"|"I")("a"|"A")("b"|"B")("l"|"L")("e"|"E")>{ mensages_manhosas.append("PALAVRAS RESERVADAS ->" + image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
 | <IS: ("i"|"I")("s"|"S")>{ mensages_manhosas.append("PALAVRAS RESERVADAS ->" + image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
 | <BOOLEAN: ("b"|"B")("o"|"O")("o"|"O")("l"|"L")("e"|"E")("a"|"A")("n"|"N")>{ mensages_manhosas.append("PALAVRAS RESERVADAS TIPO DE VARIAVEL->" + image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
 | <CHAR: ("c"|"C")("h"|"H")("a"|"A")("r"|"R")>{ mensages_manhosas.append("PALAVRAS RESERVADAS TIPO DE VARIAVEL->" + image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
 | <REAL: ("r"|"R")("e"|"E")("a"|"A")("l"|"L")>{ mensages_manhosas.append("PALAVRAS RESERVADAS TIPO DE VARIAVEL->" + image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
 | <NATURAL: ("n"|"N")("a"|"A")("t"|"T")("u"|"U")("r"|"R")("a"|"A")("l"|"L")>{ mensages_manhosas.append("PALAVRAS RESERVADAS ->" + image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
 | <EXECUTE: ("e"|"E")("x"|"X")("e"|"E")("c"|"C")("u"|"U")("t"|"T")("e"|"E")>{ mensages_manhosas.append("PALAVRAS RESERVADAS ->" + image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
 | <SET: ("s"|"S")("e"|"E")("t"|"T")>{ mensages_manhosas.append("PALAVRAS RESERVADAS ->" + image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
 | <GET: ("g"|"G")("e"|"E")("t"|"T")>{ mensages_manhosas.append("PALAVRAS RESERVADAS ->" + image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
 | <PUT: ("p"|"P")("u"|"U")("t"|"T")>{ mensages_manhosas.append("PALAVRAS RESERVADAS ->" + image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
 | <LOOP: ("l"|"L")("o"|"O")("o"|"O")("p"|"P")>{ mensages_manhosas.append("PALAVRAS RESERVADAS ->" + image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
 | <WHILE: ("w"|"W")("h"|"H")("i"|"I")("l"|"L")("e"|"E")>{ mensages_manhosas.append("PALAVRAS RESERVADAS ->" + image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
 | <TRUE: ("t"|"T")("r"|"R")("u"|"U")("e"|"E")>{ mensages_manhosas.append("PALAVRA RESERVADA TIPO BOOLEANO->" + image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
 | <FALSE: ("f"|"F")("a"|"A")("l"|"L")("s"|"S")("e"|"E")>{ mensages_manhosas.append("PALAVRAS RESERVADAS TIPO BOOLEANO->" + image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
 | <DO: ("d"|"D")("o"|"O")>{ mensages_manhosas.append("PALAVRAS RESERVADAS ->" + image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
 | <TO: ("t"|"T")("o"|"O")>{ mensages_manhosas.append("PALAVRAS RESERVADAS ->" + image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
 | <VERIFY: ("v"|"V")("e"|"E")("r"|"R")("i"|"I")("f"|"F")("y"|"Y")>{ mensages_manhosas.append("PALAVRAS RESERVADAS ->" + image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }

}
/*TOKEN: //Comentarios
{
	<COMENTARIO_LINHA: "//"(<CHARESP>)*> { mensages_manhosas.append("COMENTARIO DE LINHA -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<COMENTARIO_BLOCO: "/*" (<CHARESP>)* ""> { mensages_manhosas.append("COMENTARIO DE BLOCO -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	//|<#CHARESP: ( (~["'"," ","\\","\n","\r"]) | <LETRA> | ("\\" ( ["n","t","b","r","f","\\","'","\""]| ["u","U"]["+"]["0"-"9","a"-"z","A"-"Z"]["0"-"9","a"-"z","A"-"Z"]["0"-"9","a"-"z","A"-"Z"]["0"-"9","a"-"z","A"-"Z"] ) ) )>
   // |<#LETRA: (["a"-"z","A"-"Z"])>
}*/

TOKEN: //IDENTIFICADOR
{

	<IDENTIFICADOR: (<LETTER> | "_" ) ((<LETTER>)* | ((<LETTER>)  ("_")  (["0" - "9"]))* (<LETTER> | "_" ) | ((["0" - "9"]) "_" (<LETTER>))* | ((<LETTER>) (["0" - "9"])  "_" )* | ((<LETTER>) "_")* | (["0"-"9"])(<LETTER>)* "_" | (["0"-"9"])(<LETTER>)+ )* > { mensages_manhosas.append("IDENTIFICADOR -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<CONSTANTE_NUM_REAL: ((["0" - "9"])((["0" - "9"])?(["0" - "9"])?(["0" - "9"])?(["0" - "9"])?)?("." (["0" - "9"])((["0" - "9"]))?)) > { mensages_manhosas.append("CONSTANTE_NUM REAL-> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<CONSTANTE_NUM_INT: ((["0" - "9"])((["0" - "9"])?(["0" - "9"])?)?) > { mensages_manhosas.append("CONSTANTE_NUM INTEIRA -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<CONSTANTE_LIT: (("\"") (<ASCII>)* ("\"") | ("'")(<ASCII>)* ("'")) > { mensages_manhosas.append("CONSTANTE_LIT -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<#ASCII: ( (~["'","\\","\n","\r"]) | <LETTER>  | ("\\" ( ["n","t","b","r","f","\\","'","\"", " "]| ["u","U"]["+"]["0"-"9","a"-"f","A"-"F"]["0"-"9","a"-"f","A"-"F"]["0"-"9","a"-"f","A"-"F"]["0"-"9","a"-"f","A"-"F"] ) ) )>
    |<#LETTER: (["a"-"z","A"-"Z"])>


}

TOKEN: // CARACTERES ESPECIAIS
{
	<APARENT: "(" > {  mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<FPARENT: ")"> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<ACHAVE: "{"> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<FCHAVE: "}"> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<ACOLCH: "["> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<FCOLCH: "]"> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<VIRGULA: ","> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<PONTO: "."> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<COMENT: ":-" > { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }


}

TOKEN: //OPERADORES ARTMETICOS
{
	<ADICAO: "+"> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<SUBTRACAO: "-"> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<MULTIPLICACAO: "*"> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<DIVISAO: "/"> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<POTENCIA: "**"> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<DIVISAOINTEIRA: "%"> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<RESTODIVISAO: "%%"> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<IGUAL: "="> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
}
TOKEN: //OPERADORES RELACIONAIS
{
	<EQUIVALENTE: "=="> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<DIFERENTE: "!="> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<MENOR: "<"> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<MENOROUIGUAL: "<="> { mensages_manhosas.append("SIMBOLO ESPECIAL  -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<MAIOR: ">"> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<MAIOROUIGUAL: ">="> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }

}
TOKEN: //OPERADORES LOGICOS
{
	<NAO: "!"> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<OU: "|"> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }
	|<E: "&"> { mensages_manhosas.append("SIMBOLO ESPECIAL -> "+image + "; linha: " +input_stream.getEndLine() + "coluna:" +  input_stream.getBeginColumn() +"\r\n"); }

}



SKIP: // IGNORAR
{

	 "\r"
	| "\t"
	| "\n"
	| "\f"
	|"\r\n"
	|" "
	|"/*": multiLineComent
	| "//" : singleLineComent
}
<singleLineComent> SKIP : {
    <["\n","\r"]>: DEFAULT
    | <~[]>
}
<multiLineComent>SKIP : {
    "*/":DEFAULT
    | <~[]>
}

void program ():
{
}
{
    try{
        comentario()
        try{
            <PROGRAM>
        } catch(ParseException e){
            if(token_source.foundLexError() == 0) {
                nCountSintaticError += 1;
                mensagens_erros_sintatic.append(e.getMessage());
            }
        }
        try{
            <ACHAVE>
        } catch(ParseException e){
            if(token_source.foundLexError() == 0) {
                nCountSintaticError += 1;
                mensagens_erros_sintatic.append(e.getMessage());
            }
        }
        declaracao_variaveis()
        corpo_do_programa()
        try{
           <FCHAVE>
        } catch(ParseException e){
            if(token_source.foundLexError() == 0) {
                nCountSintaticError += 1;
                mensagens_erros_sintatic.append(e.getMessage());
            }
        }
        identificador_programa()
        acaoSemantica("#1");
        <EOF>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}
void declaracao_variaveis():
{}
{
    try{
        define()
        |
        try{
           {}
        }catch(ParseException e){
            if(token_source.foundLexError() == 0) {
                 nCountSintaticError += 1;
                 mensagens_erros_sintatic.append(e.getMessage());
            }
        }
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}
void define():
{}
{
    try{
        try{
            <DEFINE>
        } catch(ParseException e){
            if(token_source.foundLexError() == 0) {
                 nCountSintaticError += 1;
                 mensagens_erros_sintatic.append(e.getMessage());
            }
        }
        try{
            <ACHAVE>
        } catch(ParseException e){
            if(token_source.foundLexError() == 0) {
               nCountSintaticError += 1;
               mensagens_erros_sintatic.append(e.getMessage());
            }
        }
        estrutura_define()
        try{
            <FCHAVE>
        } catch(ParseException e){
            if(token_source.foundLexError() == 0) {
                nCountSintaticError += 1;
                mensagens_erros_sintatic.append(e.getMessage());
            }
        }
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
           nCountSintaticError += 1;
           mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}

void estrutura_define():
{}
{
    try{
        constante() chama_variavel() | variavel() chama_constante()
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
           CountSintaticError += 1;
           ensagens_erros_sintatic.append(e.getMessage());
        }
    }
}
void chama_variavel():
{}
{
    variavel() |
    try{
        {}
    }catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}
void chama_constante():
{}
{
    constante() |
    try{
        {}
    }catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}
void variavel():{
}
{
    try{
         <VARIABLE>
         acaoSemantica("#6");
        } catch(ParseException e){
             if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
         }
    }
    variaveis()

}
void constante():{
}
{
    try{
         <NOT>
        } catch(ParseException e){
             if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
          }
    }
    try{
         <VARIABLE>
         acaoSemantica("#3");
        } catch(ParseException e){
             if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
          }
    }
    constantes()
}
void constantes():
{}
{
    tipo()
        try{
             <IS>
        } catch(ParseException e){
             if(token_source.foundLexError() == 0) {
                 nCountSintaticError += 1;
                 mensagens_erros_sintatic.append(e.getMessage());
             }
        }
        lista_identificadores_de_constantes()
        acaoSemantica("#4");
        valor()
        acaoSemantica("#5");
        try{
             <PONTO>
            } catch(ParseException e){
                 if(token_source.foundLexError() == 0) {
                 nCountSintaticError += 1;
                 mensagens_erros_sintatic.append(e.getMessage());
            }
        }
        constante_recursiva()
}
void valor():{
}
{
    try{
        <CONSTANTE_NUM_INT>
    } catch(ParseException e){
         if(token_source.foundLexError() == 0) {
              nCountSintaticError += 1;
              mensagens_erros_sintatic.append(e.getMessage());
         }
    }
    |
    try{
         <CONSTANTE_NUM_REAL>
    } catch(ParseException e){
         if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
         }
    }
    |
    try{
         <CONSTANTE_LIT>
    } catch(ParseException e){
         if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
         }
    }
    |
    try{
         <TRUE>
    } catch(ParseException e){
          if(token_source.foundLexError() == 0) {
              nCountSintaticError += 1;
              mensagens_erros_sintatic.append(e.getMessage());
          }
    }
    |
    try{
         <FALSE>
    } catch(ParseException e){
          if(token_source.foundLexError() == 0) {
              nCountSintaticError += 1;
              mensagens_erros_sintatic.append(e.getMessage());
          }
    }
}
void constante_recursiva():
{
}
{
     try{
        constantes() |
        try{
            {}
        }catch(ParseException e){
              if(token_source.foundLexError() == 0) {
                  nCountSintaticError += 1;
                  mensagens_erros_sintatic.append(e.getMessage());
              }
        }
     } catch(ParseException e){
             if(token_source.foundLexError() == 0) {
                 nCountSintaticError += 1;
                 mensagens_erros_sintatic.append(e.getMessage());
             }
     }
}
void variaveis():
{}
{
    tipo()
    try{
        <IS>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    lista_identificadores_variavel()
    acaoSemantica("#4");
    try{
        <PONTO>
    } catch(ParseException e){
         if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
         }
    }
    variavel_recursiva()
}
void variavel_recursiva():
{
}
{
    try{
        variaveis() |
        try{
            {}
        }catch(ParseException e){
            if(token_source.foundLexError() == 0) {
               nCountSintaticError += 1;
               mensagens_erros_sintatic.append(e.getMessage());
            }
        }
    } catch(ParseException e){
            if(token_source.foundLexError() == 0) {
                nCountSintaticError += 1;
                mensagens_erros_sintatic.append(e.getMessage());
            }
    }
}

void tipo():
{
}
{
    try{
         <NATURAL>
         acaoSemantica("#7");
    } catch(ParseException e){
         if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
         }
    }
    |
    try{
        <REAL>
        acaoSemantica("#8");
    } catch(ParseException e){
         if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
            }
    }
    |
    try{
        <CHAR>
        acaoSemantica("#9");
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    |
    try{
         <BOOLEAN>
         acaoSemantica("#10");
    } catch(ParseException e){
         if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
         }
    }
}
void get():
{
}
{
    try{
        <GET>
        acaoSemantica("#17");
    } catch(ParseException e){
         if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
         }
    }
    try{
        <ACHAVE>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    lista_identificadores_variavel()
    try{
        <FCHAVE>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    try{
        <PONTO>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}
void put():
{
}
{
    try{
        <PUT>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    try{
         <ACHAVE>
        } catch(ParseException e){
             if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    lista_de_identificadore_constantes()
    try{
        <FCHAVE>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    try{
        <PONTO>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}
void lista_de_identificadore_constantes():
{
}
{
    try{
         tipo_constante() lista_de_identificadore_constantes_recursivo()
    } catch(ParseException e){
         if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
         }
    }

}
void tipo_constante():
{
}
{
        try{
            <IDENTIFICADOR>
            acaoSemantica("#18");
            indice()
            acaoSemantica("#20");
        } catch(ParseException e){
            if(token_source.foundLexError() == 0) {
               CountSintaticError += 1;
               mensagens_erros_sintatic.append(e.getMessage());
            }
        }
            indice()
        |
        try{
             <CONSTANTE_NUM_REAL>
             acaoSemantica("#22");
            } catch(ParseException e){
                 if(token_source.foundLexError() == 0) {
                 nCountSintaticError += 1;
                 mensagens_erros_sintatic.append(e.getMessage());
            }
        }
        |
        try{
             <CONSTANTE_LIT>
             acaoSemantica("#23");
            } catch(ParseException e){
                 if(token_source.foundLexError() == 0) {
                 nCountSintaticError += 1;
                 mensagens_erros_sintatic.append(e.getMessage());
            }
        }
        |
        try{
             <CONSTANTE_NUM_INT>
             acaoSemantica("#21");
        } catch(ParseException e){
             if(token_source.foundLexError() == 0) {
                 nCountSintaticError += 1;
                 mensagens_erros_sintatic.append(e.getMessage());
            }
        }
}
void lista_de_identificadore_constantes_recursivo():
{
}
{
    try{
         <VIRGULA>
    } catch(ParseException e){
         if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    lista_de_identificadore_constantes() |
    try{
        {}
    }catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}

void lista_identificadores_variavel():
{
}
{
    try{
        <IDENTIFICADOR>
        acaoSemantica("#12");

    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    indice()
    acaoSemantica("#13");
    lista_identificadores_variavel_recursivo()
}

void lista_identificadores_variavel_recursivo():
{}
{

    try{
        <VIRGULA>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    lista_identificadores_variavel()
    |
    try{
        {}
    }catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}

void lista_identificadores_de_constantes():
{
}
{
    try{
         <IDENTIFICADOR>
         acaoSematica("#11");
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    lista_identificadores_recursivo()
}

void lista_identificadores_recursivo():
{}
{
    try{
         <VIRGULA>
    } catch(ParseException e){
         if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
         }
    }
    lista_identificadores_de_constantes() |
    try{
        {}
    }catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}
void corpo_do_programa():
{}
{
    try{
        <EXECUTE>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    try{
         <ACHAVE>
    } catch(ParseException e){
         if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
         }
    }
    lista_de_comandos()
    try{
         <FCHAVE>
    } catch(ParseException e){
         if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
         }
    }
    |
    try{
        {}
    }catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}

void lista_de_comandos():{
}
{
    try{
        comando() comando_recursivo()
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}
void comando():{
}
{
    try{
        get() | put() | selecao() | atribuicao() | repeticao()
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}
void comando_recursivo():{
}
{
    try{
        lista_de_comandos() |
        try{
            {}
        }catch(ParseException e){
            if(token_source.foundLexError() == 0) {
                nCountSintaticError += 1;
                mensagens_erros_sintatic.append(e.getMessage());
            }
       }
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
           nCountSintaticError += 1;
           mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}
void identificador_programa():{
}
{
    try{
        <IDENTIFICADOR>
        acaoSemantica("#2");
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    |
    try{
        {}
    }catch(ParseException e){
        if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
        }
   }
}

void comentario():{
}{
    try{
        try{
             <COMENT>
        } catch(ParseException e){
              if(token_source.foundLexError() == 0) {
                   nCountSintaticError += 1;
                   mensagens_erros_sintatic.append(e.getMessage());
              }
        }
        try{
             <CONSTANTE_LIT>
        } catch(ParseException e){
             if(token_source.foundLexError() == 0) {
                   nCountSintaticError += 1;
                   mensagens_erros_sintatic.append(e.getMessage());
             }
        }
        |
        try{
            {}
        }catch(ParseException e){
            if(token_source.foundLexError() == 0) {
                nCountSintaticError += 1;
                mensagens_erros_sintatic.append(e.getMessage());
            }
        }
    }catch(ParseException e){
        if(token_source.foundLexError() == 0) {
           nCountSintaticError += 1;
           mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}

void selecao():
{}
{
    try{
        <VERIFY>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }

    expressao()  isTrueFalse()
    acaoSemantica("#24");
    try{
        <PONTO>
    } catch(ParseException e){
         if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
         }
    }
}

void isTrueFalse():
{}
{
    try{
        <IS>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
       }
    }
    trueFalse()
}
void  trueFalse():
{}
{
    try{
        <TRUE>
        acaoSemantica("#25");
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    try{
         <ACHAVE>
    } catch(ParseException e){
         if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
         }
    }
    lista_de_comandos()
    try{
         <FCHAVE>
    } catch(ParseException e){
         if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
         }
    }
    isFalse()
    |
    try{
         <FALSE>
         acaoSemantica("#26");
    } catch(ParseException e){
         if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
         }
    }
    try{
         <ACHAVE>
    } catch(ParseException e){
         if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
         }
    }
    lista_de_comandos()
    try{
        <FCHAVE>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    isTrue()
}

void isTrue():
{}
{
    try{
        <IS>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    try{
         <TRUE>
         acaoSemantica("#27");
    } catch(ParseException e){
         if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
         }
    }
    try{
         <ACHAVE>
    } catch(ParseException e){
         if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
         }
    }
    lista_de_comandos()
    try{
        <FCHAVE>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    |
    try{
        {}
    }catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}
void isFalse():
{}
{
    try{
        <IS>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    try{
        <FALSE>
        acaoSemantica("#27");
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    try{
         <ACHAVE>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    lista_de_comandos()
    try{
        <FCHAVE>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    |
    try{
        {}
    }catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }

}

void atribuicao():
{}
{
    try{
	    <SET>
        acaoSemantica("#15");
	} catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    expressao()
    try{
        <TO>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    lista_identificadores_variavel()
    acaoSemantica("#16");
    try{
        <PONTO>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}

void repeticao():
{}
{
    try{
	    <LOOP>
	    acaoSemantica("#28");
	} catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    try{
        <ACHAVE>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    lista_de_comandos()
    try{
        <FCHAVE>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    try{
        <WHILE>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    expressao()
    acaoSemantica("#29");
    try{
         <IS>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    try{
         <TRUE>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    try{
        <PONTO>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    |
    try{
         <WHILE>
         acaoSemantica("#30");
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    expressao()
    acaoSemantica("#31");
    try{
         <IS>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    try{
         <TRUE>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    try{
        <DO>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    try{
         <ACHAVE>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    lista_de_comandos()
    try{
         <FCHAVE>
         acaoSemantica("#32");
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
    try{
         <PONTO>
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }

}


void expressao():
{}
{
    try{
	    expressaoaritmeticaoulogica() expressao2()
	} catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}

void expressao2():
{}
{
    try{
        try{
	        <EQUIVALENTE>
	    } catch(ParseException e){
            if(token_source.foundLexError() == 0) {
                nCountSintaticError += 1;
                mensagens_erros_sintatic.append(e.getMessage());
            }
        }
        expressaoaritmeticaoulogica()
        acaoSemantica("#33");
	    |
	     try{
	        <DIFERENTE>
	     } catch(ParseException e){
                     if(token_source.foundLexError() == 0) {
                         nCountSintaticError += 1;
                         mensagens_erros_sintatic.append(e.getMessage());
                     }
                 }
	    expressaoaritmeticaoulogica()
	     acaoSemantica("#34");
	    |
	    try{
	        <MENOR>
	    } catch(ParseException e){
                             if(token_source.foundLexError() == 0) {
                                 nCountSintaticError += 1;
                                 mensagens_erros_sintatic.append(e.getMessage());
                             }
                         }
	    expressaoaritmeticaoulogica()
	     acaoSemantica("#35");
	    |
	    try{
	        <MAIOR>
	    } catch(ParseException e){
                                     if(token_source.foundLexError() == 0) {
                                         nCountSintaticError += 1;
                                         mensagens_erros_sintatic.append(e.getMessage());
                                     }
                                 }
	    expressaoaritmeticaoulogica()
	     acaoSemantica("#36");
	    |
	    try{
	        <MENOROUIGUAL>
	    } catch(ParseException e){
                                             if(token_source.foundLexError() == 0) {
                                                 nCountSintaticError += 1;
                                                 mensagens_erros_sintatic.append(e.getMessage());
                                             }
                                         }
	    expressaoaritmeticaoulogica()
	     acaoSemantica("#37");
	    |
	    try{
	        <MAIOROUIGUAL>
	    } catch(ParseException e){
                                                     if(token_source.foundLexError() == 0) {
                                                         nCountSintaticError += 1;
                                                         mensagens_erros_sintatic.append(e.getMessage());
                                                     }
                                                 }
	    expressaoaritmeticaoulogica()
	     acaoSemantica("#38");
	    |
	    try{
            {}
        }catch(ParseException e){
            if(token_source.foundLexError() == 0) {
                nCountSintaticError += 1;
                mensagens_erros_sintatic.append(e.getMessage());
            }
        }

	} catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}

void expressaoaritmeticaoulogica():
{}
{
    try{
	    termo2() menorprioridade()
	} catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}

void menorprioridade():
{}
{
    try{
	    try{
	        <ADICAO>
	    } catch(ParseException e){
                if(token_source.foundLexError() == 0) {
                    nCountSintaticError += 1;
                    mensagens_erros_sintatic.append(e.getMessage());
                }
            }
	    termo2() menorprioridade()
	     acaoSemantica("#39");
	    |
	    try{
	        <SUBTRACAO>
	    } catch(ParseException e){
                        if(token_source.foundLexError() == 0) {
                            nCountSintaticError += 1;
                            mensagens_erros_sintatic.append(e.getMessage());
                        }
                    }
	    termo2() menorprioridade()
	     acaoSemantica("#40");
	    |
	    try{
	        <OU>
	    } catch(ParseException e){
                                if(token_source.foundLexError() == 0) {
                                    nCountSintaticError += 1;
                                    mensagens_erros_sintatic.append(e.getMessage());
                                }
                            }
	    termo2() menorprioridade()
	    acaoSemantica("#41");
	    |
	    try{
            {}
        }catch(ParseException e){
            if(token_source.foundLexError() == 0) {
                nCountSintaticError += 1;
                mensagens_erros_sintatic.append(e.getMessage());
            }
        }
	} catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }

}

void termo2():
{}
{
    try{
	    termo1() mediaprioridade()
	} catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}

void mediaprioridade():
{}
{
    try{
        try{
    	    <MULTIPLICACAO>
    	} catch(ParseException e){
                if(token_source.foundLexError() == 0) {
                    nCountSintaticError += 1;
                    mensagens_erros_sintatic.append(e.getMessage());
                }
            }
    	termo1() mediaprioridade()
    	acaoSemantica("#42");
	    |
	    try{
	        <DIVISAO>
	     } catch(ParseException e){
                         if(token_source.foundLexError() == 0) {
                             nCountSintaticError += 1;
                             mensagens_erros_sintatic.append(e.getMessage());
                         }
                     }
	    termo1() mediaprioridade()
	    acaoSemantica("#43");
	    |
	    try{
	        <DIVISAOINTEIRA>
	    } catch(ParseException e){
                                 if(token_source.foundLexError() == 0) {
                                     nCountSintaticError += 1;
                                     mensagens_erros_sintatic.append(e.getMessage());
                                 }
                             }
	    termo1() mediaprioridade()
	    acaoSemantica("#44");
	    |
	    try{
	        <RESTODIVISAO>
	    } catch(ParseException e){
                                         if(token_source.foundLexError() == 0) {
                                             nCountSintaticError += 1;
                                             mensagens_erros_sintatic.append(e.getMessage());
                                         }
                                     }
	    termo1() mediaprioridade()
	    acaoSemantica("#45");
	    |
	    try{
	        <E>
	    } catch(ParseException e){
                                                 if(token_source.foundLexError() == 0) {
                                                     nCountSintaticError += 1;
                                                     mensagens_erros_sintatic.append(e.getMessage());
                                                 }
                                             }
	    termo1() mediaprioridade()
	    acaoSemantica("#46");
	    |
	    try{
            {}
        }catch(ParseException e){
            if(token_source.foundLexError() == 0) {
                nCountSintaticError += 1;
                mensagens_erros_sintatic.append(e.getMessage());
            }
        }
	} catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}

void termo1():
{}
{
    try{
	    elemento() maiorprioridade()
	} catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}

void maiorprioridade():
{}
{
    try{
        try{
    	    <POTENCIA>
    	} catch(ParseException e){
                if(token_source.foundLexError() == 0) {
                    nCountSintaticError += 1;
                    mensagens_erros_sintatic.append(e.getMessage());
                }
            }
    	elemento() maiorprioridade()
    	acaoSemantica("#47");
	    |
	    try{
            {}
        }catch(ParseException e){
            if(token_source.foundLexError() == 0) {
                nCountSintaticError += 1;
                mensagens_erros_sintatic.append(e.getMessage());
            }
        }
	} catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}

void elemento():
{}
{
    try{
        try{
	        <IDENTIFICADOR>
	        acaoSemantica("#19");
	    } catch(ParseException e){
                if(token_source.foundLexError() == 0) {
                    nCountSintaticError += 1;
                    mensagens_erros_sintatic.append(e.getMessage());
                }
            }
	    indice()
	    acaoSemantica("#20");
	    |
	    try{
	        <CONSTANTE_NUM_INT>
	        acaoSemantica("#21");
	    } catch(ParseException e){
                if(token_source.foundLexError() == 0) {
                    nCountSintaticError += 1;
                    mensagens_erros_sintatic.append(e.getMessage());
                }
            }
	    |
	    try{
	        <CONSTANTE_NUM_REAL>
	        acaoSemantica("#22");
	    } catch(ParseException e){
                if(token_source.foundLexError() == 0) {
                    nCountSintaticError += 1;
                    mensagens_erros_sintatic.append(e.getMessage());
                }
            }
	    |
	    try{
	        <CONSTANTE_LIT>
	        acaoSemantica("#23");
	    } catch(ParseException e){
                if(token_source.foundLexError() == 0) {
                    nCountSintaticError += 1;
                    mensagens_erros_sintatic.append(e.getMessage());
                }
            }
	    |
	    try{
	        <TRUE>
	        acaoSemantica("#48");
	    } catch(ParseException e){
                if(token_source.foundLexError() == 0) {
                    nCountSintaticError += 1;
                    mensagens_erros_sintatic.append(e.getMessage());
                }
            }
	    |
	    try{
	        <FALSE>
	        acaoSemantica("#49");
	    } catch(ParseException e){
                if(token_source.foundLexError() == 0) {
                    nCountSintaticError += 1;
                    mensagens_erros_sintatic.append(e.getMessage());
                }
            }
	    |
	    try{
	        <APARENT>
	    } catch(ParseException e){
                if(token_source.foundLexError() == 0) {
                    nCountSintaticError += 1;
                    mensagens_erros_sintatic.append(e.getMessage());
                }
            }
	    expressao()
	     try{
	        <FPARENT>
	    } catch(ParseException e){
                if(token_source.foundLexError() == 0) {
                    nCountSintaticError += 1;
                    mensagens_erros_sintatic.append(e.getMessage());
                }
            }
	    |
	     try{
	        <NAO>
	     } catch(ParseException e){
                 if(token_source.foundLexError() == 0) {
                     nCountSintaticError += 1;
                     mensagens_erros_sintatic.append(e.getMessage());
                 }
             }
         try{
	        <APARENT>
	     } catch(ParseException e){
                 if(token_source.foundLexError() == 0) {
                     nCountSintaticError += 1;
                     mensagens_erros_sintatic.append(e.getMessage());
                 }
             }
	     expressao()
	     try{
	        <FPARENT>
	        acaoSemantica("#50");
	     } catch(ParseException e){
                 if(token_source.foundLexError() == 0) {
                     nCountSintaticError += 1;
                     mensagens_erros_sintatic.append(e.getMessage());
                 }
             }
	} catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}

void indice():
{}
{
    try{
        try{
	        <ACOLCH>
	    }catch(ParseException e){
            if(token_source.foundLexError() == 0) {
               nCountSintaticError += 1;
               ensagens_erros_sintatic.append(e.getMessage());
            }
        }
        try{
	        <CONSTANTE_NUM_INT>
            acaoSemantica("#14");
	    }catch(ParseException e){
            if(token_source.foundLexError() == 0) {
                nCountSintaticError += 1;
                ensagens_erros_sintatic.append(e.getMessage());

            }
        }
	    try{
	        <FCOLCH>
	    }catch(ParseException e){
            if(token_source.foundLexError() == 0) {
                 nCountSintaticError += 1;
                 ensagens_erros_sintatic.append(e.getMessage());
            }
        }
	    |
	    try{
            {}
        }catch(ParseException e){
             if(token_source.foundLexError() == 0) {
                 nCountSintaticError += 1;
                 mensagens_erros_sintatic.append(e.getMessage());
             }
        }
	} catch(ParseException e){
        if(token_source.foundLexError() == 0) {
             nCountSintaticError += 1;
             mensagens_erros_sintatic.append(e.getMessage());
        }
    }
}

void Programa():
{ }
{
    try{
	  program()
    } catch(ParseException e){
        if(token_source.foundLexError() == 0) {
            nCountSintaticError += 1;
            mensagens_erros_sintatic.append(e.getMessage());
        }
    }
	  /*((
	    <PROGRAM>|<DEFINE>|<NOT>|<VARIABLE>|<IS>|<BOOLEAN>|<CHAR>|<REAL>|<NATURAL>|<EXECUTE>|<VERIFY>|<SET>|<GET>|<PUT>|<LOOP>|<WHILE>|<TRUE>|<FALSE>|<DO>|<TO>|
	<APARENT>|<FPARENT>|<ACHAVE>|<FCHAVE>|<ACOLCH>|<FCOLCH>|<VIRGULA>|<PONTO>|<ADICAO>|<SUBTRACAO>|<MULTIPLICACAO>|<DIVISAO>|
	<POTENCIA>|<DIVISAOINTEIRA>|<RESTODIVISAO>|<IGUAL>|<EQUIVALENTE>| <DIFERENTE>|<MENOR>|<MENOROUIGUAL>|<MAIOR>|<MAIOROUIGUAL>|
	<NAO>|<OU>|<E>|<IDENTIFICADOR>|<CONSTANTE_NUM_REAL>|<CONSTANTE_NUM_INT>|<CONSTANTE_LIT>|<COMENTARIO_BLOCO> |<COMENTARIO_LINHA>
	)*)
*/
}