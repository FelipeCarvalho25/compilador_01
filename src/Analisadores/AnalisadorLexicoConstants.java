/* Generated By:JavaCC: Do not edit this line. AnalisadorLexicoConstants.java */
package Analisadores;


/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AnalisadorLexicoConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INVALID_LEXICAL = 1;
  /** RegularExpression Id. */
  int INVALID_STRG1 = 2;
  /** RegularExpression Id. */
  int INVALID_STRG2 = 3;
  /** RegularExpression Id. */
  int PROGRAM = 4;
  /** RegularExpression Id. */
  int DEFINE = 5;
  /** RegularExpression Id. */
  int NOT = 6;
  /** RegularExpression Id. */
  int VARIABLE = 7;
  /** RegularExpression Id. */
  int IS = 8;
  /** RegularExpression Id. */
  int BOOLEAN = 9;
  /** RegularExpression Id. */
  int CHAR = 10;
  /** RegularExpression Id. */
  int REAL = 11;
  /** RegularExpression Id. */
  int NATURAL = 12;
  /** RegularExpression Id. */
  int EXECUTE = 13;
  /** RegularExpression Id. */
  int SET = 14;
  /** RegularExpression Id. */
  int GET = 15;
  /** RegularExpression Id. */
  int PUT = 16;
  /** RegularExpression Id. */
  int LOOP = 17;
  /** RegularExpression Id. */
  int WHILE = 18;
  /** RegularExpression Id. */
  int TRUE = 19;
  /** RegularExpression Id. */
  int FALSE = 20;
  /** RegularExpression Id. */
  int DO = 21;
  /** RegularExpression Id. */
  int TO = 22;
  /** RegularExpression Id. */
  int VERIFY = 23;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 24;
  /** RegularExpression Id. */
  int CONSTANTE_NUM_REAL = 25;
  /** RegularExpression Id. */
  int CONSTANTE_NUM_INT = 26;
  /** RegularExpression Id. */
  int CONSTANTE_LIT = 27;
  /** RegularExpression Id. */
  int ASCII = 28;
  /** RegularExpression Id. */
  int LETTER = 29;
  /** RegularExpression Id. */
  int APARENT = 30;
  /** RegularExpression Id. */
  int FPARENT = 31;
  /** RegularExpression Id. */
  int ACHAVE = 32;
  /** RegularExpression Id. */
  int FCHAVE = 33;
  /** RegularExpression Id. */
  int ACOLCH = 34;
  /** RegularExpression Id. */
  int FCOLCH = 35;
  /** RegularExpression Id. */
  int VIRGULA = 36;
  /** RegularExpression Id. */
  int PONTO = 37;
  /** RegularExpression Id. */
  int COMENT = 38;
  /** RegularExpression Id. */
  int ADICAO = 39;
  /** RegularExpression Id. */
  int SUBTRACAO = 40;
  /** RegularExpression Id. */
  int MULTIPLICACAO = 41;
  /** RegularExpression Id. */
  int DIVISAO = 42;
  /** RegularExpression Id. */
  int POTENCIA = 43;
  /** RegularExpression Id. */
  int DIVISAOINTEIRA = 44;
  /** RegularExpression Id. */
  int RESTODIVISAO = 45;
  /** RegularExpression Id. */
  int IGUAL = 46;
  /** RegularExpression Id. */
  int EQUIVALENTE = 47;
  /** RegularExpression Id. */
  int DIFERENTE = 48;
  /** RegularExpression Id. */
  int MENOR = 49;
  /** RegularExpression Id. */
  int MENOROUIGUAL = 50;
  /** RegularExpression Id. */
  int MAIOR = 51;
  /** RegularExpression Id. */
  int MAIOROUIGUAL = 52;
  /** RegularExpression Id. */
  int NAO = 53;
  /** RegularExpression Id. */
  int OU = 54;
  /** RegularExpression Id. */
  int E = 55;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int singleLineComent = 1;
  /** Lexical state. */
  int multiLineComent = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<INVALID_LEXICAL>",
    "<INVALID_STRG1>",
    "<INVALID_STRG2>",
    "<PROGRAM>",
    "<DEFINE>",
    "<NOT>",
    "<VARIABLE>",
    "<IS>",
    "<BOOLEAN>",
    "<CHAR>",
    "<REAL>",
    "<NATURAL>",
    "<EXECUTE>",
    "<SET>",
    "<GET>",
    "<PUT>",
    "<LOOP>",
    "<WHILE>",
    "<TRUE>",
    "<FALSE>",
    "<DO>",
    "<TO>",
    "<VERIFY>",
    "<IDENTIFICADOR>",
    "<CONSTANTE_NUM_REAL>",
    "<CONSTANTE_NUM_INT>",
    "<CONSTANTE_LIT>",
    "<ASCII>",
    "<LETTER>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\".\"",
    "\":-\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"**\"",
    "\"%\"",
    "\"%%\"",
    "\"=\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"!\"",
    "\"|\"",
    "\"&\"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\f\"",
    "\"\\r\\n\"",
    "\" \"",
    "\"/*\"",
    "\"//\"",
    "<token of kind 64>",
    "<token of kind 65>",
    "\"*/\"",
    "<token of kind 67>",
  };

}
